{
    "componentChunkName": "component---theme-src-templates-post-query-js",
    "path": "/meeting-notes/foam-core-2020-07-11/",
    "result": {"data":{"mdx":{"id":"3c432d10-c882-54d6-9d71-fd97e44df7fa","tableOfContents":{"items":[{"url":"#foam-core-2020-07-11","title":"Foam Core 2020-07-11"}]},"fields":{"title":"Foam Core 2020-07-11","slug":"/meeting-notes/foam-core-2020-07-11/","url":"https://demo-wiki.owenyoung.com/wiki/meeting-notes/foam-core-2020-07-11/","editUrl":"https://github.com/theowenyoung/gatsby-theme-primer-wiki/tree/main/example/foam-content/meeting-notes/foam-core-2020-07-11.md","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021","gitCreatedAt":"2021-08-31T04:06:30.000Z","shouldShowTitle":false},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":["Meetings"],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Meetings\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"foam-core-2020-07-11\"\n  }, \"Foam Core 2020-07-11\"), mdx(\"p\", null, \"Present: @jevakallio, @riccardoferretti\"), mdx(\"h3\", {\n    \"id\": \"tests\"\n  }, \"Tests\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How do we know this approach works?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Supports renaming\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Supports searching with (attribute-x)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Find dead links\")))), mdx(\"h3\", {\n    \"id\": \"getting-started\"\n  }, \"Getting started\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Land work to master\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create a foam-core package\")), mdx(\"li\", {\n    parentName: \"ul\"\n  })))), mdx(\"h3\", {\n    \"id\": \"open-questions\"\n  }, \"Open questions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How should writing to files work\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What if affected notes have unsaved changes\")))), mdx(\"h3\", {\n    \"id\": \"graph-methods\"\n  }, \"Graph methods\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"get all\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"search by\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tag\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"free text\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/todo/\",\n    \"title\": \"Todo\"\n  }, \"todo\"), \": how do vs code search editors work? are they pluggable? what do they need?\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"find dead links\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"for linters\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"serialize/toJSON (for visualizers)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"subscribe to changes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"find if a link exists (and which link) in a given row / column position + return it's start and end position - this would probably be needed e.g. to CTRL-hovering to work properly\")), mdx(\"h3\", {\n    \"id\": \"node-methods\"\n  }, \"Node methods\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rename node and all links to that node\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"get links\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"forward links (for link lists)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"backlinks (with surrounding context)\")))), mdx(\"h3\", {\n    \"id\": \"node-definition\"\n  }, \"Node definition\"), mdx(\"p\", null, \"What do we need the node (and edge metadata) to contain:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"id\"), \": tbd\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"should be unique, needs some kind of unique gen function\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"should be reconstructable even if links are not updated every time\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"what happens during rename? is reparenting the graph going to be hard?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"do id's need to be persistent, or can we create them per in-memory session, keep them stable despite renames, and then next session generate a new id?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ideally should be a path to file, so it's easy to look up from the graph by id for renaming\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"type\"), \": Note | Image | etc\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"title\"), \": can be read from markdown title or frontmatter metadata\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"path\"), \": full path to file, relative to workspace (graph) root\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"links\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"id\"), \": File to link to\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"text\"), \": The link label\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"type\"), \" markdown | mediawiki | image | http\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"section\"), \": : Anchor link to a heading in target note, if we want to add support for linking to sections\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"block\"), \" (ref)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Positional data from AST?\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tags\"))), mdx(\"h3\", {\n    \"id\": \"markdown-layer\"\n  }, \"Markdown layer\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"source\"), \": raw markdown (rename?)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ast\"), \": raw markdown ast\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"checksum\"), \": if we do caching\")), mdx(\"h3\", {\n    \"id\": \"link-text\"\n  }, \"Link text\"), mdx(\"p\", null, \"// some-file.md\\n// # Some File\"), mdx(\"p\", null, \"Write -> Store on disk\\n[\", \"[Some File]\", \"] -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/meeting-notes/some-file/\"\n  }, \"Some File\")), mdx(\"p\", null, \"Editing\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/meeting-notes/some-file/\"\n  }, \"Some File\")), mdx(\"p\", null, \"On disk (could be solved by migration)\\n[\", \"[some-file]\", \"]\\n[\", \"[Some File]\", \"]\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"docs/index.md -> Index\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"notes/index.md -> Index\")), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/content3/publishing/index/\",\n    \"title\": \"Publishing pages\"\n  }, \"Index\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/meeting-notes/notes/index/\"\n  }, \"Index | notes/index.md\"), \"\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/content3/publishing/index/\",\n    \"title\": \"Publishing pages\"\n  }, \"Index\"), \" docs/index.md\"), mdx(\"p\", null, \"[\", \"[Some File | path/to/some-file.md]\", \"]\"), mdx(\"p\", null, \"Do we apply any constraints:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[file-name-without-extension]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[file-name-with-extension.md]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Title Cased File Name]]\"))), mdx(\"p\", null, \"Not supported by Markdown Notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[path/to/file-name.md]]\"), \" - Just use markdown links\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Target Note Title]]\"))), mdx(\"p\", null, \"Issues:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Name clashes in directories\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Name clashes between extensions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Renaming\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Change filename/title needs to reflect everywhere\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Orphaning\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"If we can't rely on in-memory process to rename things correctly while changes happen (e.g. file is renamed, moved, deleted, or titled) \", mdx(\"ref\", {\n    id: \"1\"\n  })))), mdx(\"p\", null, \"Solving this issue is necessarily heuristic. We could try to write smart solutions, plus a linter for orphans\"), mdx(\"p\", null, \"How others solve this:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unique ids -- could support optionally as part of file name or front matter metadata. Should not be required.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\r\ntags:\r\n  - Meetings\r\n---\r\n\r\n# Foam Core 2020-07-11\r\n\r\nPresent: @jevakallio, @riccardoferretti\r\n\r\n### Tests\r\n\r\n- How do we know this approach works?\r\n  - Supports renaming\r\n  - Supports searching with (attribute-x)\r\n  - Find dead links\r\n\r\n### Getting started\r\n\r\n- Land work to master\r\n\r\n  - Create a foam-core package\r\n\r\n  -\r\n\r\n### Open questions\r\n\r\n- How should writing to files work\r\n  - What if affected notes have unsaved changes\r\n\r\n### Graph methods\r\n\r\n- get all\r\n- search by\r\n  - tag\r\n  - free text\r\n  - [[todo]]: how do vs code search editors work? are they pluggable? what do they need?\r\n- find dead links\r\n  - for linters\r\n- serialize/toJSON (for visualizers)\r\n- subscribe to changes\r\n- find if a link exists (and which link) in a given row / column position + return it's start and end position - this would probably be needed e.g. to CTRL-hovering to work properly\r\n\r\n### Node methods\r\n\r\n- rename node and all links to that node\r\n- get links\r\n  - forward links (for link lists)\r\n  - backlinks (with surrounding context)\r\n\r\n### Node definition\r\n\r\nWhat do we need the node (and edge metadata) to contain:\r\n\r\n- `id`: tbd\r\n  - should be unique, needs some kind of unique gen function\r\n  - should be reconstructable even if links are not updated every time\r\n  - what happens during rename? is reparenting the graph going to be hard?\r\n  - do id's need to be persistent, or can we create them per in-memory session, keep them stable despite renames, and then next session generate a new id?\r\n  - Ideally should be a path to file, so it's easy to look up from the graph by id for renaming\r\n- `type`: Note | Image | etc\r\n- `title`: can be read from markdown title or frontmatter metadata\r\n- `path`: full path to file, relative to workspace (graph) root\r\n- `links`:\r\n  - `id`: File to link to\r\n  - `text`: The link label\r\n  - `type` markdown | mediawiki | image | http\r\n  - `section`: : Anchor link to a heading in target note, if we want to add support for linking to sections\r\n  - `block` (ref)\r\n  - Positional data from AST?\r\n- `tags`\r\n\r\n### Markdown layer\r\n\r\n- `source`: raw markdown (rename?)\r\n- `ast`: raw markdown ast\r\n- `checksum`: if we do caching\r\n\r\n### Link text\r\n\r\n// some-file.md\r\n// # Some File\r\n\r\nWrite -> Store on disk\r\n[[Some File]] -> [Some File](some-file.md)\r\n\r\nEditing\r\n[Some File](some-file.md)\r\n\r\nOn disk (could be solved by migration)\r\n[[some-file]]\r\n[[Some File]]\r\n\r\n- docs/index.md -> Index\r\n- notes/index.md -> Index\r\n\r\n[[Index]]\r\n[[Index | notes/index.md]]\r\n\r\n[Index] docs/index.md\r\n[Index | notes/index.md]: notes/index.md\r\n\r\n[[Some File | path/to/some-file.md]]\r\n\r\nDo we apply any constraints:\r\n\r\n- `[[file-name-without-extension]]`\r\n- `[[file-name-with-extension.md]]`\r\n- `[[Title Cased File Name]]`\r\n\r\nNot supported by Markdown Notes:\r\n\r\n- `[[path/to/file-name.md]]` - Just use markdown links\r\n- `[[Target Note Title]]`\r\n\r\nIssues:\r\n\r\n- Name clashes in directories\r\n- Name clashes between extensions\r\n- Renaming\r\n  - Change filename/title needs to reflect everywhere\r\n- Orphaning\r\n\r\n- If we can't rely on in-memory process to rename things correctly while changes happen (e.g. file is renamed, moved, deleted, or titled) <ref id=\"1\" />\r\n\r\nSolving this issue is necessarily heuristic. We could try to write smart solutions, plus a linter for orphans\r\n\r\nHow others solve this:\r\n\r\n- Unique ids -- could support optionally as part of file name or front matter metadata. Should not be required.\r\n\r\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\r\n[todo]: ../dev/todo.md \"Todo\"\r\n[index]: ../../content3/publishing/index.md \"Publishing pages\"\r\n[index | notes/index.md]: ../../content3/publishing/index.md \"Publishing pages\"\r\n[//end]: # \"Autogenerated link references\"\r\n","excerpt":"Foam Core 2020-07-11 Present: @jevakallio, @riccardoferretti Tests How do we know this approach works? Supports renaming Supports searching…","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Dev\", \"Todo\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"todo\"\n  }, \"Todo\"), mdx(\"p\", null, \"Features belong on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dev/roadmap/\",\n    \"title\": \"Roadmap\"\n  }, \"roadmap\"), \".\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Write out Roadmap\", mdx(\"ul\", {\n    parentName: \"li\",\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Isolate tasks for MLH fellows\"))), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Create better structure for Recipes\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Connect to folks at GitHub\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Learn more about VS Code Extension APIs\", mdx(\"ul\", {\n    parentName: \"li\",\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Workspace fs/events\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Reloading changes from outside vscode\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Expanding, editable snippets\")))), mdx(\"p\", null, \"For more things to do, check backlinks for Pages that annotate \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dev/todo/\",\n    \"title\": \"Todo\"\n  }, \"todo\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/dev/todo/","title":"Todo","shouldShowTitle":false}}],"inboundReferences":[]},"tagsOutbound":{"nodes":[{"frontmatter":{"title":"","tags":["Meetings"]},"fields":{"slug":"/meeting-notes/foam-core-2020-07-11/","title":"Foam Core 2020-07-11","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}}]}},"pageContext":{"tags":["Meetings"],"slug":"/meeting-notes/foam-core-2020-07-11/","sidebarItems":[{"title":"","items":[{"title":"Links","url":"","external":false,"items":[{"title":"Foam Template","url":"https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki","external":true,"items":[]},{"title":"Obsidian Template","url":"https://github.com/theowenyoung/obsidian-template-gatsby-theme-primer-wiki","external":true,"items":[]},{"title":"Real World Wiki","url":"https://wiki.owenyoung.com","external":true,"items":[]}],"indent":false,"collapse":true}],"collapse":true},{"title":"","items":[{"title":"Recently Updated","url":"/latest/","collapse":true,"indent":false,"items":[{"title":"10-14: Summary","url":"/SUMMARY/"},{"title":"09-09: Foam","url":"/"},{"title":"08-31: Page not found!","url":"/404/"},{"title":"08-31: Big Vision","url":"/big-vision/"},{"title":"08-31: Code of Conduct","url":"/code-of-conduct/"},{"title":"08-31: Contribution Guide","url":"/contribution-guide/"},{"title":"08-31: Frequently Asked Questions","url":"/frequently-asked-questions/"},{"title":"08-31: Inbox","url":"/inbox/"},{"title":"08-31: Principles","url":"/principles/"},{"title":"08-31: Reading list","url":"/reading-list/"}]}]},{"title":"Tags","items":[{"title":"Awesome","type":"tag","url":"/tags/awesome/","items":[{"title":"Reading list","url":"/reading-list/"},{"title":"Terminology","url":"/terminology/"}]},{"title":"Backlink","type":"tag","url":"/tags/backlink/","items":[{"title":"Backlinking","url":"/features/backlinking/"}]},{"title":"CLI","type":"tag","url":"/tags/cli/","items":[{"title":"Command Line Interface","url":"/features/cli/"}]},{"title":"Conduct","type":"tag","url":"/tags/conduct/","items":[{"title":"Code of Conduct","url":"/code-of-conduct/"}]},{"title":"Contribution","type":"tag","url":"/tags/contribution/","items":[{"title":"Contribution Guide","url":"/contribution-guide/"}]},{"title":"Core","type":"tag","url":"/tags/core/","items":[{"title":"Foam Core","url":"/dev/foam-core/"}]},{"title":"Dev","type":"tag","url":"/tags/dev/","items":[{"title":"Architecture","url":"/dev/architecture/"},{"title":"Build vs Assemble","url":"/dev/build-vs-assemble/"},{"title":"Foam Core","url":"/dev/foam-core/"},{"title":"Foam File Format","url":"/dev/foam-file-format/"},{"title":"Good First Task","url":"/dev/good-first-task/"},{"title":"Link Reference Definition Improvements","url":"/dev/link-reference-definition-improvements/"},{"title":"Materialized Backlinks (stub)","url":"/dev/materialized-backlinks/"},{"title":"MDX by Default(stub)","url":"/dev/mdx-by-default/"},{"title":"Publishing Permissions(stub)","url":"/dev/publishing-permissions/"},{"title":"Roadmap","url":"/dev/roadmap/"},{"title":"Todo","url":"/dev/todo/"},{"title":"Unlinked references (stub)","url":"/dev/unlinked-references/"}]},{"title":"Extensions","type":"tag","url":"/tags/extensions/","items":[{"title":"Recommended Extensions","url":"/recommended-extensions/"}]},{"title":"FAQ","type":"tag","url":"/tags/faq/","items":[{"title":"Frequently Asked Questions","url":"/frequently-asked-questions/"}]},{"title":"Features","type":"tag","url":"/tags/features/","items":[{"title":"Backlinking","url":"/features/backlinking/"},{"title":"Command Line Interface","url":"/features/cli/"},{"title":"Creating New Notes","url":"/features/creating-new-notes/"},{"title":"Custom Markdown Preview Styles","url":"/features/custom-markdown-preview-styles/"},{"title":"Adding Custom Snippets","url":"/features/custom-snippets/"},{"title":"Daily notes","url":"/features/daily-notes/"},{"title":"Foam logging in VsCode","url":"/features/foam-logging-in-vscode/"},{"title":"Git Integration","url":"/features/git-integration/"},{"title":"Graph Visualisation","url":"/features/graph-visualisation/"},{"title":"Key Bindings","url":"/features/key-bindings/"},{"title":"Link Reference Definitions","url":"/features/link-reference-definitions/"},{"title":"Note Templates","url":"/features/note-templates/"},{"title":"Orphans","url":"/features/orphans/"},{"title":"Tags","url":"/features/tags/"},{"title":"Janitor","url":"/features/workspace-janitor/"}]},{"title":"Foam","type":"tag","url":"/tags/foam/","items":[{"title":"Foam","url":"/"}]},{"title":"Format","type":"tag","url":"/tags/format/","items":[{"title":"Foam File Format","url":"/dev/foam-file-format/"}]},{"title":"Gatsby","type":"tag","url":"/tags/gatsby/","items":[{"title":"Generate a site using Gatsby","url":"/publishing/generate-gatsby-site/"}]},{"title":"Git","type":"tag","url":"/tags/git/","items":[{"title":"Git Integration","url":"/features/git-integration/"}]},{"title":"Github","type":"tag","url":"/tags/github/","items":[{"title":"GitHub Pages","url":"/publishing/publish-to-github-pages/"}]},{"title":"Graph-Visualisation","type":"tag","url":"/tags/graph-visualisation/","items":[{"title":"Graph Visualisation","url":"/features/graph-visualisation/"}]},{"title":"Inbox","type":"tag","url":"/tags/inbox/","items":[{"title":"Inbox","url":"/inbox/"}]},{"title":"Link","type":"tag","url":"/tags/link/","items":[{"title":"Link Reference Definitions","url":"/features/link-reference-definitions/"}]},{"title":"Mdx","type":"tag","url":"/tags/mdx/","items":[{"title":"MDX by Default(stub)","url":"/dev/mdx-by-default/"}]},{"title":"Meetings","type":"tag","url":"/tags/meetings/","items":[{"title":"Foam Core 2020-07-11","url":"/meeting-notes/foam-core-2020-07-11/"}]},{"title":"New","type":"tag","url":"/tags/new/","items":[{"title":"Creating New Notes","url":"/features/creating-new-notes/"}]},{"title":"Orphans","type":"tag","url":"/tags/orphans/","items":[{"title":"Orphans","url":"/features/orphans/"}]},{"title":"Principles","type":"tag","url":"/tags/principles/","items":[{"title":"Principles","url":"/principles/"}]},{"title":"Publish","type":"tag","url":"/tags/publish/","items":[{"title":"Generate a site using Gatsby","url":"/publishing/generate-gatsby-site/"},{"title":"Publishing pages","url":"/publishing/"},{"title":"Katex Math Rendering","url":"/publishing/math-support-with-katex/"},{"title":"Math Support","url":"/publishing/math-support-with-mathjax/"},{"title":"Publish to Azure DevOps Wiki","url":"/publishing/publish-to-azure-devops-wiki/"},{"title":"GitHub Pages","url":"/publishing/publish-to-github-pages/"},{"title":"Publish to GitHub","url":"/publishing/publish-to-github/"},{"title":"GitLab Pages","url":"/publishing/publish-to-gitlab-pages/"},{"title":"Publish to Netlify with Eleventy","url":"/publishing/publish-to-netlify-with-eleventy/"},{"title":"Publish to Vercel","url":"/publishing/publish-to-vercel/"}]},{"title":"Recipes","type":"tag","url":"/tags/recipes/","items":[{"title":"Add images to your notes","url":"/recipes/add-images-to-notes/"},{"title":"Automatically Sync with Git","url":"/recipes/automatic-git-syncing/"},{"title":"Automatically Expand URLs to Well-Titled Links","url":"/recipes/automatically-expand-urls-to-well-titled-links/"},{"title":"Capture Notes With Drafts Pro","url":"/recipes/capture-notes-with-drafts-pro/"},{"title":"Capture Notes With Shortcuts and GitHub Actions","url":"/recipes/capture-notes-with-shortcuts-and-github-actions/"},{"title":"Diagrams in Markdown","url":"/recipes/diagrams-in-markdown/"},{"title":"How to Write Recipes","url":"/recipes/how-to-write-recipes/"},{"title":"Make Backlinks More Prominent","url":"/recipes/make-backlinks-more-prominent/"},{"title":"Migrating from Obsidian (stub)","url":"/recipes/migrating-from-obsidian/"},{"title":"Migrating from OneNote","url":"/recipes/migrating-from-onenote/"},{"title":"Migrating from Roam (stub)","url":"/recipes/migrating-from-roam/"},{"title":"Custom Note Macros","url":"/recipes/note-macros/"},{"title":"Pre-defined User Snippets","url":"/recipes/predefined-user-snippets/"},{"title":"Real-time Collaboration","url":"/recipes/real-time-collaboration/"},{"title":"Recipes","url":"/recipes/recipes/"},{"title":"Search for Notes","url":"/recipes/search-for-notes/"},{"title":"Shows Image Preview on Hover","url":"/recipes/shows-image-preview-on-hover/"},{"title":"Take notes on mobile phones","url":"/recipes/take-notes-from-mobile-phone/"},{"title":"Web Clipper","url":"/recipes/web-clipper/"},{"title":"Write your notes in GitHub Gist","url":"/recipes/write-your-notes-in-github-gist/"}]},{"title":"Roadmap","type":"tag","url":"/tags/roadmap/","items":[{"title":"Roadmap","url":"/dev/roadmap/"}]},{"title":"Tags","type":"tag","url":"/tags/tags/","items":[{"title":"Tags","url":"/features/tags/"}]},{"title":"Task","type":"tag","url":"/tags/task/","items":[{"title":"Good First Task","url":"/dev/good-first-task/"}]},{"title":"Template","type":"tag","url":"/tags/template/","items":[{"title":"Note Templates","url":"/features/note-templates/"}]},{"title":"Templates","type":"tag","url":"/tags/templates/","items":[{"title":"Templates v2 Proposal <!-- omit in TOC -->","url":"/proposals/templates-v2/"}]},{"title":"Todo","type":"tag","url":"/tags/todo/","items":[{"title":"Todo","url":"/dev/todo/"}]},{"title":"Vercel","type":"tag","url":"/tags/vercel/","items":[{"title":"Publish to Vercel","url":"/publishing/publish-to-vercel/"}]},{"title":"Vision","type":"tag","url":"/tags/vision/","items":[{"title":"Big Vision","url":"/big-vision/"}]},{"title":"Wikilinks","type":"tag","url":"/tags/wikilinks/","items":[{"title":"Wikilinks","url":"/wikilinks/"}]},{"title":"architecture","type":"tag","url":"/tags/architecture/","items":[{"title":"Architecture","url":"/dev/architecture/"}]},{"title":"good-first-task","type":"tag","url":"/tags/good-first-task/","items":[{"title":"Contribution Guide","url":"/contribution-guide/"}]},{"title":"todo","type":"tag","url":"/tags/todo/","items":[{"title":"Contribution Guide","url":"/contribution-guide/"}]}]}],"tagsGroups":[{"title":"Awesome","type":"tag","url":"/tags/awesome/","items":[{"title":"Reading list","url":"/reading-list/"},{"title":"Terminology","url":"/terminology/"}]},{"title":"Backlink","type":"tag","url":"/tags/backlink/","items":[{"title":"Backlinking","url":"/features/backlinking/"}]},{"title":"CLI","type":"tag","url":"/tags/cli/","items":[{"title":"Command Line Interface","url":"/features/cli/"}]},{"title":"Conduct","type":"tag","url":"/tags/conduct/","items":[{"title":"Code of Conduct","url":"/code-of-conduct/"}]},{"title":"Contribution","type":"tag","url":"/tags/contribution/","items":[{"title":"Contribution Guide","url":"/contribution-guide/"}]},{"title":"Core","type":"tag","url":"/tags/core/","items":[{"title":"Foam Core","url":"/dev/foam-core/"}]},{"title":"Dev","type":"tag","url":"/tags/dev/","items":[{"title":"Architecture","url":"/dev/architecture/"},{"title":"Build vs Assemble","url":"/dev/build-vs-assemble/"},{"title":"Foam Core","url":"/dev/foam-core/"},{"title":"Foam File Format","url":"/dev/foam-file-format/"},{"title":"Good First Task","url":"/dev/good-first-task/"},{"title":"Link Reference Definition Improvements","url":"/dev/link-reference-definition-improvements/"},{"title":"Materialized Backlinks (stub)","url":"/dev/materialized-backlinks/"},{"title":"MDX by Default(stub)","url":"/dev/mdx-by-default/"},{"title":"Publishing Permissions(stub)","url":"/dev/publishing-permissions/"},{"title":"Roadmap","url":"/dev/roadmap/"},{"title":"Todo","url":"/dev/todo/"},{"title":"Unlinked references (stub)","url":"/dev/unlinked-references/"}]},{"title":"Extensions","type":"tag","url":"/tags/extensions/","items":[{"title":"Recommended Extensions","url":"/recommended-extensions/"}]},{"title":"FAQ","type":"tag","url":"/tags/faq/","items":[{"title":"Frequently Asked Questions","url":"/frequently-asked-questions/"}]},{"title":"Features","type":"tag","url":"/tags/features/","items":[{"title":"Backlinking","url":"/features/backlinking/"},{"title":"Command Line Interface","url":"/features/cli/"},{"title":"Creating New Notes","url":"/features/creating-new-notes/"},{"title":"Custom Markdown Preview Styles","url":"/features/custom-markdown-preview-styles/"},{"title":"Adding Custom Snippets","url":"/features/custom-snippets/"},{"title":"Daily notes","url":"/features/daily-notes/"},{"title":"Foam logging in VsCode","url":"/features/foam-logging-in-vscode/"},{"title":"Git Integration","url":"/features/git-integration/"},{"title":"Graph Visualisation","url":"/features/graph-visualisation/"},{"title":"Key Bindings","url":"/features/key-bindings/"},{"title":"Link Reference Definitions","url":"/features/link-reference-definitions/"},{"title":"Note Templates","url":"/features/note-templates/"},{"title":"Orphans","url":"/features/orphans/"},{"title":"Tags","url":"/features/tags/"},{"title":"Janitor","url":"/features/workspace-janitor/"}]},{"title":"Foam","type":"tag","url":"/tags/foam/","items":[{"title":"Foam","url":"/"}]},{"title":"Format","type":"tag","url":"/tags/format/","items":[{"title":"Foam File Format","url":"/dev/foam-file-format/"}]},{"title":"Gatsby","type":"tag","url":"/tags/gatsby/","items":[{"title":"Generate a site using Gatsby","url":"/publishing/generate-gatsby-site/"}]},{"title":"Git","type":"tag","url":"/tags/git/","items":[{"title":"Git Integration","url":"/features/git-integration/"}]},{"title":"Github","type":"tag","url":"/tags/github/","items":[{"title":"GitHub Pages","url":"/publishing/publish-to-github-pages/"}]},{"title":"Graph-Visualisation","type":"tag","url":"/tags/graph-visualisation/","items":[{"title":"Graph Visualisation","url":"/features/graph-visualisation/"}]},{"title":"Inbox","type":"tag","url":"/tags/inbox/","items":[{"title":"Inbox","url":"/inbox/"}]},{"title":"Link","type":"tag","url":"/tags/link/","items":[{"title":"Link Reference Definitions","url":"/features/link-reference-definitions/"}]},{"title":"Mdx","type":"tag","url":"/tags/mdx/","items":[{"title":"MDX by Default(stub)","url":"/dev/mdx-by-default/"}]},{"title":"Meetings","type":"tag","url":"/tags/meetings/","items":[{"title":"Foam Core 2020-07-11","url":"/meeting-notes/foam-core-2020-07-11/"}]},{"title":"New","type":"tag","url":"/tags/new/","items":[{"title":"Creating New Notes","url":"/features/creating-new-notes/"}]},{"title":"Orphans","type":"tag","url":"/tags/orphans/","items":[{"title":"Orphans","url":"/features/orphans/"}]},{"title":"Principles","type":"tag","url":"/tags/principles/","items":[{"title":"Principles","url":"/principles/"}]},{"title":"Publish","type":"tag","url":"/tags/publish/","items":[{"title":"Generate a site using Gatsby","url":"/publishing/generate-gatsby-site/"},{"title":"Publishing pages","url":"/publishing/"},{"title":"Katex Math Rendering","url":"/publishing/math-support-with-katex/"},{"title":"Math Support","url":"/publishing/math-support-with-mathjax/"},{"title":"Publish to Azure DevOps Wiki","url":"/publishing/publish-to-azure-devops-wiki/"},{"title":"GitHub Pages","url":"/publishing/publish-to-github-pages/"},{"title":"Publish to GitHub","url":"/publishing/publish-to-github/"},{"title":"GitLab Pages","url":"/publishing/publish-to-gitlab-pages/"},{"title":"Publish to Netlify with Eleventy","url":"/publishing/publish-to-netlify-with-eleventy/"},{"title":"Publish to Vercel","url":"/publishing/publish-to-vercel/"}]},{"title":"Recipes","type":"tag","url":"/tags/recipes/","items":[{"title":"Add images to your notes","url":"/recipes/add-images-to-notes/"},{"title":"Automatically Sync with Git","url":"/recipes/automatic-git-syncing/"},{"title":"Automatically Expand URLs to Well-Titled Links","url":"/recipes/automatically-expand-urls-to-well-titled-links/"},{"title":"Capture Notes With Drafts Pro","url":"/recipes/capture-notes-with-drafts-pro/"},{"title":"Capture Notes With Shortcuts and GitHub Actions","url":"/recipes/capture-notes-with-shortcuts-and-github-actions/"},{"title":"Diagrams in Markdown","url":"/recipes/diagrams-in-markdown/"},{"title":"How to Write Recipes","url":"/recipes/how-to-write-recipes/"},{"title":"Make Backlinks More Prominent","url":"/recipes/make-backlinks-more-prominent/"},{"title":"Migrating from Obsidian (stub)","url":"/recipes/migrating-from-obsidian/"},{"title":"Migrating from OneNote","url":"/recipes/migrating-from-onenote/"},{"title":"Migrating from Roam (stub)","url":"/recipes/migrating-from-roam/"},{"title":"Custom Note Macros","url":"/recipes/note-macros/"},{"title":"Pre-defined User Snippets","url":"/recipes/predefined-user-snippets/"},{"title":"Real-time Collaboration","url":"/recipes/real-time-collaboration/"},{"title":"Recipes","url":"/recipes/recipes/"},{"title":"Search for Notes","url":"/recipes/search-for-notes/"},{"title":"Shows Image Preview on Hover","url":"/recipes/shows-image-preview-on-hover/"},{"title":"Take notes on mobile phones","url":"/recipes/take-notes-from-mobile-phone/"},{"title":"Web Clipper","url":"/recipes/web-clipper/"},{"title":"Write your notes in GitHub Gist","url":"/recipes/write-your-notes-in-github-gist/"}]},{"title":"Roadmap","type":"tag","url":"/tags/roadmap/","items":[{"title":"Roadmap","url":"/dev/roadmap/"}]},{"title":"Tags","type":"tag","url":"/tags/tags/","items":[{"title":"Tags","url":"/features/tags/"}]},{"title":"Task","type":"tag","url":"/tags/task/","items":[{"title":"Good First Task","url":"/dev/good-first-task/"}]},{"title":"Template","type":"tag","url":"/tags/template/","items":[{"title":"Note Templates","url":"/features/note-templates/"}]},{"title":"Templates","type":"tag","url":"/tags/templates/","items":[{"title":"Templates v2 Proposal <!-- omit in TOC -->","url":"/proposals/templates-v2/"}]},{"title":"Todo","type":"tag","url":"/tags/todo/","items":[{"title":"Todo","url":"/dev/todo/"}]},{"title":"Vercel","type":"tag","url":"/tags/vercel/","items":[{"title":"Publish to Vercel","url":"/publishing/publish-to-vercel/"}]},{"title":"Vision","type":"tag","url":"/tags/vision/","items":[{"title":"Big Vision","url":"/big-vision/"}]},{"title":"Wikilinks","type":"tag","url":"/tags/wikilinks/","items":[{"title":"Wikilinks","url":"/wikilinks/"}]},{"title":"architecture","type":"tag","url":"/tags/architecture/","items":[{"title":"Architecture","url":"/dev/architecture/"}]},{"title":"good-first-task","type":"tag","url":"/tags/good-first-task/","items":[{"title":"Contribution Guide","url":"/contribution-guide/"}]},{"title":"todo","type":"tag","url":"/tags/todo/","items":[{"title":"Contribution Guide","url":"/contribution-guide/"}]}],"latestPosts":[{"fields":{"slug":"/SUMMARY/","title":"Summary","lastUpdatedAt":"2021-10-14T22:16:45.000Z","lastUpdated":"10/14/2021"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/","title":"Foam","lastUpdatedAt":"2021-09-09T14:55:13.000Z","lastUpdated":"9/9/2021"},"frontmatter":{"draft":false,"tags":["Foam"]}},{"fields":{"slug":"/404/","title":"Page not found!","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/big-vision/","title":"Big Vision","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["Vision"]}},{"fields":{"slug":"/code-of-conduct/","title":"Code of Conduct","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["Conduct"]}},{"fields":{"slug":"/contribution-guide/","title":"Contribution Guide","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["todo","good-first-task","Contribution"]}},{"fields":{"slug":"/frequently-asked-questions/","title":"Frequently Asked Questions","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["FAQ"]}},{"fields":{"slug":"/inbox/","title":"Inbox","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["Inbox"]}},{"fields":{"slug":"/principles/","title":"Principles","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["Principles"]}},{"fields":{"slug":"/reading-list/","title":"Reading list","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["Awesome"]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}