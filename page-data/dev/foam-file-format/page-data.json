{
    "componentChunkName": "component---theme-src-templates-post-query-js",
    "path": "/dev/foam-file-format/",
    "result": {"data":{"mdx":{"id":"6313ce5a-b770-5d44-b5e8-df5decfd3879","tableOfContents":{"items":[{"url":"#foam-file-format","title":"Foam File Format"}]},"fields":{"title":"Foam File Format","slug":"/dev/foam-file-format/","url":"https://demo-wiki.owenyoung.com/wiki/dev/foam-file-format/","editUrl":"https://github.com/theowenyoung/gatsby-theme-primer-wiki/tree/main/example/foam-content/dev/foam-file-format.md","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021","gitCreatedAt":"2021-08-31T04:06:30.000Z","shouldShowTitle":false},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":["Dev","Format"],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Dev\", \"Format\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"foam-file-format\"\n  }, \"Foam File Format\"), mdx(\"p\", null, \"This file is an example of a valid Foam file. Essentially it's just a markdown file with a bit of additional support for MediaWiki-style \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[wikilinks]]\"), \".\"), mdx(\"p\", null, \"Here are a few specific constraints, mainly because our tooling is a bit fragmented. Most of these should be eventually lifted, and our requirement should just be \\\"Markdown with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[wikilinks]]\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"The first top level \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"# Heading\"), \" will be used as title for the note.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If not available, we will use the file name\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"File name should have extension \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \".md\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is a temporary limitation and will be lifted in future versions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"At least \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".mdx\"), \" will be supported, but ideally we'll support any file that you can map to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Markdown\"), \" language mode in VS Code\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"In addition to normal Markdown Links syntax you can use \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"[[MediaWiki]]\"), \" links.\"), \" See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/wikilinks/\",\n    \"title\": \"Wikilinks\"\n  }, \"wikilinks\"), \" for more details.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\ntags:\n  - Dev\n  - Format\n---\n\n# Foam File Format\n\nThis file is an example of a valid Foam file. Essentially it's just a markdown file with a bit of additional support for MediaWiki-style `[[wikilinks]]`.\n\nHere are a few specific constraints, mainly because our tooling is a bit fragmented. Most of these should be eventually lifted, and our requirement should just be \"Markdown with `[[wikilinks]]`:\n\n- **The first top level `# Heading` will be used as title for the note.**\n  - If not available, we will use the file name\n- **File name should have extension `.md`**\n  - This is a temporary limitation and will be lifted in future versions.\n  - At least `.mdx` will be supported, but ideally we'll support any file that you can map to `Markdown` language mode in VS Code\n- **In addition to normal Markdown Links syntax you can use `[[MediaWiki]]` links.** See [[wikilinks]] for more details.\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[wikilinks]: ../wikilinks.md \"Wikilinks\"\n[//end]: # \"Autogenerated link references\"\n","excerpt":"Foam File Format This file is an example of a valid Foam file. Essentially it's just a markdown file with a bit of additional support for Mâ€¦","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Wikilinks\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"wikilinks\"\n  }, \"Wikilinks\"), mdx(\"p\", null, \"Foam enables you to Link pages together using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[file-name]]\"), \" annotations (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[MediaWiki]]\"), \" links).\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[\"), \" and start typing a file name for autocompletion.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Note that your file names should be in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"lower-dash-case.md\"), \", and your wikilinks should reference file names exactly: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[lower-dash-case]]\"), \", not \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Lower Dash Case]]\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See [\", \"[link-formatting-and-autocompletion]\", \"] for more information, and how to setup your link autocompletions to make this easier.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Cmd\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Click\"), \" ( \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Ctrl\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Click\"), \" on Windows ) on file name to navigate to file (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"F12\"), \" also works while your cursor is on the file name)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Cmd\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Click\"), \" ( \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Ctrl\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Click\"), \" on Windows ) on non-existent file to create that file in the workspace.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The note creation makes use of the special \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/note-templates/\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"new-note.md\"), \" note template\"))))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"F12\"), \" shortcut feels unnatural you can rebind it at File > Preferences > Keyboard Shortcuts by searching for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"editor.action.revealDefinition\"), \".\")), mdx(\"h2\", {\n    \"id\": \"markdown-compatibility\"\n  }, \"Markdown compatibility\"), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=foam.foam-vscode\"\n  }, \"Foam for VSCode\"), \" extension automatically generates \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/features/link-reference-definitions/\",\n    \"title\": \"Link Reference Definitions\"\n  }, \"link-reference-definitions\"), \" at the bottom of the file to make wikilinks compatible with Markdown tools and parsers.\"), mdx(\"h2\", {\n    \"id\": \"read-more\"\n  }, \"Read more\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/foam-file-format/\",\n    \"title\": \"Foam File Format\"\n  }, \"foam-file-format\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/note-templates/\",\n    \"title\": \"Note Templates\"\n  }, \"note-templates\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[link-formatting-and-autocompletion]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/link-reference-definition-improvements/\",\n    \"title\": \"Link Reference Definition Improvements\"\n  }, \"link-reference-definition-improvements\"), \" for further discussion on current problems and potential solutions.\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/wikilinks/","title":"Wikilinks","shouldShowTitle":false}}],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"FAQ\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"frequently-asked-questions\"\n  }, \"Frequently Asked Questions\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u26A0\\uFE0F Foam is still in preview. Expect the experience to be a little rough.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/#frequently-asked-questions/\"\n  }, \"Frequently Asked Questions\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/#linksgraphsbacklinks-dont-work-how-do-i-enable-them/\"\n  }, \"Links/Graphs/BackLinks don't work. How do I enable them?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/#i-dont-want-foam-enabled-for-all-my-workspaces/\"\n  }, \"I don't want Foam enabled for all my workspaces\"))))), mdx(\"h2\", {\n    \"id\": \"linksgraphsbacklinks-dont-work-how-do-i-enable-them\"\n  }, \"Links/Graphs/BackLinks don't work. How do I enable them?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ensure that you have all the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recommended-extensions/\",\n    \"title\": \"Recommended Extensions\"\n  }, \"recommended-extensions\"), \" installed in Visual Studio Code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reload Visual Studio Code by running \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Cmd\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Shift\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"P\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Ctrl\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Shift\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"P\"), \" for Windows), type \\\"reload\\\" and run the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Developer: Reload Window\"), \" command to for the updated extensions take effect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check the formatting rules for links on \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/foam-file-format/\",\n    \"title\": \"Foam File Format\"\n  }, \"foam-file-format\"), \", \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/wikilinks/\",\n    \"title\": \"Wikilinks\"\n  }, \"wikilinks\"), \" and [\", \"[link-formatting-and-autocompletion]\", \"]\")), mdx(\"h2\", {\n    \"id\": \"i-dont-want-foam-enabled-for-all-my-workspaces\"\n  }, \"I don't want Foam enabled for all my workspaces\"), mdx(\"p\", null, \"Any extension you install in Visual Studio Code is enabled by default. Give the philosophy of Foam it works out of the box without doing any configuration upfront. In case you want to disable Foam for a specific workspace, or disable Foam by default and enable it for specific workspaces, it is advised to follow the best practices as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://code.visualstudio.com/docs/editor/extension-marketplace#_manage-extensions\"\n  }, \"documented by Visual Studio Code\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/frequently-asked-questions/","title":"Frequently Asked Questions"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Wikilinks\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"wikilinks\"\n  }, \"Wikilinks\"), mdx(\"p\", null, \"Foam enables you to Link pages together using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[file-name]]\"), \" annotations (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[MediaWiki]]\"), \" links).\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[\"), \" and start typing a file name for autocompletion.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Note that your file names should be in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"lower-dash-case.md\"), \", and your wikilinks should reference file names exactly: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[lower-dash-case]]\"), \", not \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Lower Dash Case]]\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See [\", \"[link-formatting-and-autocompletion]\", \"] for more information, and how to setup your link autocompletions to make this easier.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Cmd\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Click\"), \" ( \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Ctrl\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Click\"), \" on Windows ) on file name to navigate to file (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"F12\"), \" also works while your cursor is on the file name)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Cmd\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Click\"), \" ( \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Ctrl\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Click\"), \" on Windows ) on non-existent file to create that file in the workspace.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The note creation makes use of the special \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/note-templates/\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"new-note.md\"), \" note template\"))))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"F12\"), \" shortcut feels unnatural you can rebind it at File > Preferences > Keyboard Shortcuts by searching for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"editor.action.revealDefinition\"), \".\")), mdx(\"h2\", {\n    \"id\": \"markdown-compatibility\"\n  }, \"Markdown compatibility\"), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=foam.foam-vscode\"\n  }, \"Foam for VSCode\"), \" extension automatically generates \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/features/link-reference-definitions/\",\n    \"title\": \"Link Reference Definitions\"\n  }, \"link-reference-definitions\"), \" at the bottom of the file to make wikilinks compatible with Markdown tools and parsers.\"), mdx(\"h2\", {\n    \"id\": \"read-more\"\n  }, \"Read more\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/foam-file-format/\",\n    \"title\": \"Foam File Format\"\n  }, \"foam-file-format\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/note-templates/\",\n    \"title\": \"Note Templates\"\n  }, \"note-templates\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[link-formatting-and-autocompletion]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/link-reference-definition-improvements/\",\n    \"title\": \"Link Reference Definition Improvements\"\n  }, \"link-reference-definition-improvements\"), \" for further discussion on current problems and potential solutions.\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/wikilinks/","title":"Wikilinks"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Dev\", \"Roadmap\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"roadmap\"\n  }, \"Roadmap\"), mdx(\"p\", null, \"Some of these items can be achieved by combining existing tools, but others may require us to build bespoke software solutions. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dev/build-vs-assemble/\",\n    \"title\": \"Build vs Assemble\"\n  }, \"build-vs-assemble\"), \" to understand trade-offs between these approaches. If a feature can be implemented by contributing to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/recipes/recipes/\",\n    \"title\": \"Recipes\"\n  }, \"recipes\"), \", it should.\"), mdx(\"h2\", {\n    \"id\": \"in-progress\"\n  }, \"In progress\"), mdx(\"p\", null, \"Items that are already being worked on. Roadmap items in this stage should have an owner.\"), mdx(\"h2\", {\n    \"id\": \"high-priority\"\n  }, \"High priority\"), mdx(\"p\", null, \"Items we plan on working next. Items in this stage don't need to have an owner, but before we start working on them should have enough specification that they can be picked up and worked on without having to seek consensus.\"), mdx(\"p\", null, \"If you want to pick up work in this category, you should have a plan on how long the implementation will approximately take so we don't block progress by sitting on high priority issues.\"), mdx(\"h2\", {\n    \"id\": \"backlog\"\n  }, \"Backlog\"), mdx(\"p\", null, \"Everything else, categorised into themes. Just because something is on this list doesn't mean it'll get done. If you're interested in working on items in this category, check the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/contribution-guide/\",\n    \"title\": \"Contribution Guide\"\n  }, \"contribution-guide\"), \" for how to get started.\"), mdx(\"p\", null, \"If a roadmap item is a stub, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"consider\"), \" opening a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/foambubble/foam/issues\"\n  }, \"GitHub issue\"), \" to start a conversation to avoid situations where the implementation does not fit long term vision and roadmap. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note that this is optional. The only centralised governance in Foam is to decide what ends up in the official \", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"https://github.com/foambubble/foam-template\"\n  }, \"template\"), \", \", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"https://github.com/foambubble/foam\"\n  }, \"documentation\"), \" and \", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"https://github.com/foambubble/foam/tree/master/packages/foam-vscode\"\n  }, \"extension\"), \". You are free to build whatever you want for yourself, and we'd love if you shared it with us, but you are by no means obligated to do so!\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When creating GitHub issues to discuss roadmap items, link them here.\")), mdx(\"h3\", {\n    \"id\": \"known-issues\"\n  }, \"Known issues\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[improve-default-workspace-settings]\", \"]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussion: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/issues/270\"\n  }, \"foam#270\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Improve \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/git-integration/\",\n    \"title\": \"Git Integration\"\n  }, \"git-integration\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fix \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/wikilinks/\",\n    \"title\": \"Wikilinks\"\n  }, \"wikilinks\"), \" compatibility issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Simplify \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/foam-file-format/\",\n    \"title\": \"Foam File Format\"\n  }, \"foam-file-format\"), \"\")), mdx(\"h3\", {\n    \"id\": \"core-features\"\n  }, \"Core features\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[renaming-files]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/unlinked-references/\",\n    \"title\": \"Unlinked references (stub)\"\n  }, \"unlinked-references\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[block-references]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[improved-backlinking]\", \"]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UX: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/make-backlinks-more-prominent/\",\n    \"title\": \"Make Backlinks More Prominent\"\n  }, \"make-backlinks-more-prominent\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/materialized-backlinks/\",\n    \"title\": \"Materialized Backlinks (stub)\"\n  }, \"materialized-backlinks\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/automatic-git-syncing/\",\n    \"title\": \"Automatically Sync with Git\"\n  }, \"automatic-git-syncing\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[git-flows-for-teams]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[user-settings]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/link-reference-definitions/\",\n    \"title\": \"Link Reference Definitions\"\n  }, \"link-reference-definitions\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/predefined-user-snippets/\",\n    \"title\": \"Pre-defined User Snippets\"\n  }, \"predefined-user-snippets\"), \"\")), mdx(\"h3\", {\n    \"id\": \"publishing\"\n  }, \"Publishing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[officially-support-alternative-templates]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[improved-static-site-generation]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/mdx-by-default/\",\n    \"title\": \"MDX by Default(stub)\"\n  }, \"mdx-by-default\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[search-in-published-workspace]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[graph-in-published-workspace]\", \"]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussion: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/issues/58\"\n  }, \"foam#58\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[linking-between-published-workspaces]\", \"]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussion: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/issues/59\"\n  }, \"foam#59\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/publishing-permissions/\",\n    \"title\": \"Publishing Permissions(stub)\"\n  }, \"publishing-permissions\"), \"\")), mdx(\"h3\", {\n    \"id\": \"platforms\"\n  }, \"Platforms\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/cli/\",\n    \"title\": \"Command Line Interface\"\n  }, \"cli\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[mobile-apps]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[packaged-desktop-app]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[web-editor]\", \"]\")), mdx(\"h3\", {\n    \"id\": \"migration\"\n  }, \"Migration\"), mdx(\"p\", null, \"The community is working on a number of automated scripts to help you migrate to Foam. The main work of developing such a method involves exporting your notes, converting them to the Markdown format, and then making sure that the links between notes (if you had those) still work.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/migrating-from-roam/\",\n    \"title\": \"Migrating from Roam (stub)\"\n  }, \"migrating-from-roam\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussion: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/issues/55\"\n  }, \"foam#55\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/migrating-from-obsidian/\",\n    \"title\": \"Migrating from Obsidian (stub)\"\n  }, \"migrating-from-obsidian\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussion: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/issues/46\"\n  }, \"foam#46\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/migrating-from-onenote/\",\n    \"title\": \"Migrating from OneNote\"\n  }, \"migrating-from-onenote\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussion: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/issues/151\"\n  }, \"foam#151\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Migration from other tools...\"))), mdx(\"h3\", {\n    \"id\": \"integration\"\n  }, \"Integration\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Integrations to third party tools\"), \"...\")), mdx(\"h3\", {\n    \"id\": \"wild-ideas\"\n  }, \"Wild ideas\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[foam-linter]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[refactoring-via-language-server-protocol]\", \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/dev/roadmap/","title":"Roadmap"}}]},"tagsOutbound":{"nodes":[{"frontmatter":{"title":"","tags":["architecture","Dev"]},"fields":{"slug":"/dev/architecture/","title":"Architecture","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}},{"frontmatter":{"title":"","tags":["Dev"]},"fields":{"slug":"/dev/build-vs-assemble/","title":"Build vs Assemble","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}},{"frontmatter":{"title":"","tags":["Dev","Core"]},"fields":{"slug":"/dev/foam-core/","title":"Foam Core","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}},{"frontmatter":{"title":"","tags":["Dev","Format"]},"fields":{"slug":"/dev/foam-file-format/","title":"Foam File Format","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}},{"frontmatter":{"title":"","tags":["Dev","Task"]},"fields":{"slug":"/dev/good-first-task/","title":"Good First Task","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}},{"frontmatter":{"title":"","tags":["Dev"]},"fields":{"slug":"/dev/link-reference-definition-improvements/","title":"Link Reference Definition Improvements","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}},{"frontmatter":{"title":"","tags":["Dev"]},"fields":{"slug":"/dev/materialized-backlinks/","title":"Materialized Backlinks (stub)","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}},{"frontmatter":{"title":"","tags":["Dev","Mdx"]},"fields":{"slug":"/dev/mdx-by-default/","title":"MDX by Default(stub)","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}},{"frontmatter":{"title":"","tags":["Dev"]},"fields":{"slug":"/dev/publishing-permissions/","title":"Publishing Permissions(stub)","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}},{"frontmatter":{"title":"","tags":["Dev","Roadmap"]},"fields":{"slug":"/dev/roadmap/","title":"Roadmap","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}},{"frontmatter":{"title":"","tags":["Dev","Todo"]},"fields":{"slug":"/dev/todo/","title":"Todo","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}},{"frontmatter":{"title":"","tags":["Dev"]},"fields":{"slug":"/dev/unlinked-references/","title":"Unlinked references (stub)","lastUpdated":"8/31/2021","lastUpdatedAt":"2021-08-31T04:06:30.000Z","gitCreatedAt":"2021-08-31T04:06:30.000Z"}}]}},"pageContext":{"tags":["Dev","Format"],"slug":"/dev/foam-file-format/","sidebarItems":[{"title":"","items":[{"title":"Links","url":"","external":false,"items":[{"title":"Foam Template","url":"https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki","external":true,"items":[]},{"title":"Obsidian Template","url":"https://github.com/theowenyoung/obsidian-template-gatsby-theme-primer-wiki","external":true,"items":[]},{"title":"Real World Wiki","url":"https://wiki.owenyoung.com","external":true,"items":[]}],"indent":false,"collapse":true}],"collapse":true},{"title":"","items":[{"title":"Recently Updated","url":"/latest/","collapse":true,"indent":false,"items":[{"title":"10-14: Summary","url":"/SUMMARY/"},{"title":"09-09: Foam","url":"/"},{"title":"08-31: Page not found!","url":"/404/"},{"title":"08-31: Big Vision","url":"/big-vision/"},{"title":"08-31: Code of Conduct","url":"/code-of-conduct/"},{"title":"08-31: Contribution Guide","url":"/contribution-guide/"},{"title":"08-31: Frequently Asked Questions","url":"/frequently-asked-questions/"},{"title":"08-31: Inbox","url":"/inbox/"},{"title":"08-31: Principles","url":"/principles/"},{"title":"08-31: Reading list","url":"/reading-list/"}]}]},{"title":"Tags","items":[{"title":"Awesome","type":"tag","url":"/tags/awesome/","items":[{"title":"Reading list","url":"/reading-list/"},{"title":"Terminology","url":"/terminology/"}]},{"title":"Backlink","type":"tag","url":"/tags/backlink/","items":[{"title":"Backlinking","url":"/features/backlinking/"}]},{"title":"CLI","type":"tag","url":"/tags/cli/","items":[{"title":"Command Line Interface","url":"/features/cli/"}]},{"title":"Conduct","type":"tag","url":"/tags/conduct/","items":[{"title":"Code of Conduct","url":"/code-of-conduct/"}]},{"title":"Contribution","type":"tag","url":"/tags/contribution/","items":[{"title":"Contribution Guide","url":"/contribution-guide/"}]},{"title":"Core","type":"tag","url":"/tags/core/","items":[{"title":"Foam Core","url":"/dev/foam-core/"}]},{"title":"Dev","type":"tag","url":"/tags/dev/","items":[{"title":"Architecture","url":"/dev/architecture/"},{"title":"Build vs Assemble","url":"/dev/build-vs-assemble/"},{"title":"Foam Core","url":"/dev/foam-core/"},{"title":"Foam File Format","url":"/dev/foam-file-format/"},{"title":"Good First Task","url":"/dev/good-first-task/"},{"title":"Link Reference Definition Improvements","url":"/dev/link-reference-definition-improvements/"},{"title":"Materialized Backlinks (stub)","url":"/dev/materialized-backlinks/"},{"title":"MDX by Default(stub)","url":"/dev/mdx-by-default/"},{"title":"Publishing Permissions(stub)","url":"/dev/publishing-permissions/"},{"title":"Roadmap","url":"/dev/roadmap/"},{"title":"Todo","url":"/dev/todo/"},{"title":"Unlinked references (stub)","url":"/dev/unlinked-references/"}]},{"title":"Extensions","type":"tag","url":"/tags/extensions/","items":[{"title":"Recommended Extensions","url":"/recommended-extensions/"}]},{"title":"FAQ","type":"tag","url":"/tags/faq/","items":[{"title":"Frequently Asked Questions","url":"/frequently-asked-questions/"}]},{"title":"Features","type":"tag","url":"/tags/features/","items":[{"title":"Backlinking","url":"/features/backlinking/"},{"title":"Command Line Interface","url":"/features/cli/"},{"title":"Creating New Notes","url":"/features/creating-new-notes/"},{"title":"Custom Markdown Preview Styles","url":"/features/custom-markdown-preview-styles/"},{"title":"Adding Custom Snippets","url":"/features/custom-snippets/"},{"title":"Daily notes","url":"/features/daily-notes/"},{"title":"Foam logging in VsCode","url":"/features/foam-logging-in-vscode/"},{"title":"Git Integration","url":"/features/git-integration/"},{"title":"Graph Visualisation","url":"/features/graph-visualisation/"},{"title":"Key Bindings","url":"/features/key-bindings/"},{"title":"Link Reference Definitions","url":"/features/link-reference-definitions/"},{"title":"Note Templates","url":"/features/note-templates/"},{"title":"Orphans","url":"/features/orphans/"},{"title":"Tags","url":"/features/tags/"},{"title":"Janitor","url":"/features/workspace-janitor/"}]},{"title":"Foam","type":"tag","url":"/tags/foam/","items":[{"title":"Foam","url":"/"}]},{"title":"Format","type":"tag","url":"/tags/format/","items":[{"title":"Foam File Format","url":"/dev/foam-file-format/"}]},{"title":"Gatsby","type":"tag","url":"/tags/gatsby/","items":[{"title":"Generate a site using Gatsby","url":"/publishing/generate-gatsby-site/"}]},{"title":"Git","type":"tag","url":"/tags/git/","items":[{"title":"Git Integration","url":"/features/git-integration/"}]},{"title":"Github","type":"tag","url":"/tags/github/","items":[{"title":"GitHub Pages","url":"/publishing/publish-to-github-pages/"}]},{"title":"Graph-Visualisation","type":"tag","url":"/tags/graph-visualisation/","items":[{"title":"Graph Visualisation","url":"/features/graph-visualisation/"}]},{"title":"Inbox","type":"tag","url":"/tags/inbox/","items":[{"title":"Inbox","url":"/inbox/"}]},{"title":"Link","type":"tag","url":"/tags/link/","items":[{"title":"Link Reference Definitions","url":"/features/link-reference-definitions/"}]},{"title":"Mdx","type":"tag","url":"/tags/mdx/","items":[{"title":"MDX by Default(stub)","url":"/dev/mdx-by-default/"}]},{"title":"Meetings","type":"tag","url":"/tags/meetings/","items":[{"title":"Foam Core 2020-07-11","url":"/meeting-notes/foam-core-2020-07-11/"}]},{"title":"New","type":"tag","url":"/tags/new/","items":[{"title":"Creating New Notes","url":"/features/creating-new-notes/"}]},{"title":"Orphans","type":"tag","url":"/tags/orphans/","items":[{"title":"Orphans","url":"/features/orphans/"}]},{"title":"Principles","type":"tag","url":"/tags/principles/","items":[{"title":"Principles","url":"/principles/"}]},{"title":"Publish","type":"tag","url":"/tags/publish/","items":[{"title":"Generate a site using Gatsby","url":"/publishing/generate-gatsby-site/"},{"title":"Publishing pages","url":"/publishing/"},{"title":"Katex Math Rendering","url":"/publishing/math-support-with-katex/"},{"title":"Math Support","url":"/publishing/math-support-with-mathjax/"},{"title":"Publish to Azure DevOps Wiki","url":"/publishing/publish-to-azure-devops-wiki/"},{"title":"GitHub Pages","url":"/publishing/publish-to-github-pages/"},{"title":"Publish to GitHub","url":"/publishing/publish-to-github/"},{"title":"GitLab Pages","url":"/publishing/publish-to-gitlab-pages/"},{"title":"Publish to Netlify with Eleventy","url":"/publishing/publish-to-netlify-with-eleventy/"},{"title":"Publish to Vercel","url":"/publishing/publish-to-vercel/"}]},{"title":"Recipes","type":"tag","url":"/tags/recipes/","items":[{"title":"Add images to your notes","url":"/recipes/add-images-to-notes/"},{"title":"Automatically Sync with Git","url":"/recipes/automatic-git-syncing/"},{"title":"Automatically Expand URLs to Well-Titled Links","url":"/recipes/automatically-expand-urls-to-well-titled-links/"},{"title":"Capture Notes With Drafts Pro","url":"/recipes/capture-notes-with-drafts-pro/"},{"title":"Capture Notes With Shortcuts and GitHub Actions","url":"/recipes/capture-notes-with-shortcuts-and-github-actions/"},{"title":"Diagrams in Markdown","url":"/recipes/diagrams-in-markdown/"},{"title":"How to Write Recipes","url":"/recipes/how-to-write-recipes/"},{"title":"Make Backlinks More Prominent","url":"/recipes/make-backlinks-more-prominent/"},{"title":"Migrating from Obsidian (stub)","url":"/recipes/migrating-from-obsidian/"},{"title":"Migrating from OneNote","url":"/recipes/migrating-from-onenote/"},{"title":"Migrating from Roam (stub)","url":"/recipes/migrating-from-roam/"},{"title":"Custom Note Macros","url":"/recipes/note-macros/"},{"title":"Pre-defined User Snippets","url":"/recipes/predefined-user-snippets/"},{"title":"Real-time Collaboration","url":"/recipes/real-time-collaboration/"},{"title":"Recipes","url":"/recipes/recipes/"},{"title":"Search for Notes","url":"/recipes/search-for-notes/"},{"title":"Shows Image Preview on Hover","url":"/recipes/shows-image-preview-on-hover/"},{"title":"Take notes on mobile phones","url":"/recipes/take-notes-from-mobile-phone/"},{"title":"Web Clipper","url":"/recipes/web-clipper/"},{"title":"Write your notes in GitHub Gist","url":"/recipes/write-your-notes-in-github-gist/"}]},{"title":"Roadmap","type":"tag","url":"/tags/roadmap/","items":[{"title":"Roadmap","url":"/dev/roadmap/"}]},{"title":"Tags","type":"tag","url":"/tags/tags/","items":[{"title":"Tags","url":"/features/tags/"}]},{"title":"Task","type":"tag","url":"/tags/task/","items":[{"title":"Good First Task","url":"/dev/good-first-task/"}]},{"title":"Template","type":"tag","url":"/tags/template/","items":[{"title":"Note Templates","url":"/features/note-templates/"}]},{"title":"Templates","type":"tag","url":"/tags/templates/","items":[{"title":"Templates v2 Proposal <!-- omit in TOC -->","url":"/proposals/templates-v2/"}]},{"title":"Todo","type":"tag","url":"/tags/todo/","items":[{"title":"Todo","url":"/dev/todo/"}]},{"title":"Vercel","type":"tag","url":"/tags/vercel/","items":[{"title":"Publish to Vercel","url":"/publishing/publish-to-vercel/"}]},{"title":"Vision","type":"tag","url":"/tags/vision/","items":[{"title":"Big Vision","url":"/big-vision/"}]},{"title":"Wikilinks","type":"tag","url":"/tags/wikilinks/","items":[{"title":"Wikilinks","url":"/wikilinks/"}]},{"title":"architecture","type":"tag","url":"/tags/architecture/","items":[{"title":"Architecture","url":"/dev/architecture/"}]},{"title":"good-first-task","type":"tag","url":"/tags/good-first-task/","items":[{"title":"Contribution Guide","url":"/contribution-guide/"}]},{"title":"todo","type":"tag","url":"/tags/todo/","items":[{"title":"Contribution Guide","url":"/contribution-guide/"}]}]}],"tagsGroups":[{"title":"Awesome","type":"tag","url":"/tags/awesome/","items":[{"title":"Reading list","url":"/reading-list/"},{"title":"Terminology","url":"/terminology/"}]},{"title":"Backlink","type":"tag","url":"/tags/backlink/","items":[{"title":"Backlinking","url":"/features/backlinking/"}]},{"title":"CLI","type":"tag","url":"/tags/cli/","items":[{"title":"Command Line Interface","url":"/features/cli/"}]},{"title":"Conduct","type":"tag","url":"/tags/conduct/","items":[{"title":"Code of Conduct","url":"/code-of-conduct/"}]},{"title":"Contribution","type":"tag","url":"/tags/contribution/","items":[{"title":"Contribution Guide","url":"/contribution-guide/"}]},{"title":"Core","type":"tag","url":"/tags/core/","items":[{"title":"Foam Core","url":"/dev/foam-core/"}]},{"title":"Dev","type":"tag","url":"/tags/dev/","items":[{"title":"Architecture","url":"/dev/architecture/"},{"title":"Build vs Assemble","url":"/dev/build-vs-assemble/"},{"title":"Foam Core","url":"/dev/foam-core/"},{"title":"Foam File Format","url":"/dev/foam-file-format/"},{"title":"Good First Task","url":"/dev/good-first-task/"},{"title":"Link Reference Definition Improvements","url":"/dev/link-reference-definition-improvements/"},{"title":"Materialized Backlinks (stub)","url":"/dev/materialized-backlinks/"},{"title":"MDX by Default(stub)","url":"/dev/mdx-by-default/"},{"title":"Publishing Permissions(stub)","url":"/dev/publishing-permissions/"},{"title":"Roadmap","url":"/dev/roadmap/"},{"title":"Todo","url":"/dev/todo/"},{"title":"Unlinked references (stub)","url":"/dev/unlinked-references/"}]},{"title":"Extensions","type":"tag","url":"/tags/extensions/","items":[{"title":"Recommended Extensions","url":"/recommended-extensions/"}]},{"title":"FAQ","type":"tag","url":"/tags/faq/","items":[{"title":"Frequently Asked Questions","url":"/frequently-asked-questions/"}]},{"title":"Features","type":"tag","url":"/tags/features/","items":[{"title":"Backlinking","url":"/features/backlinking/"},{"title":"Command Line Interface","url":"/features/cli/"},{"title":"Creating New Notes","url":"/features/creating-new-notes/"},{"title":"Custom Markdown Preview Styles","url":"/features/custom-markdown-preview-styles/"},{"title":"Adding Custom Snippets","url":"/features/custom-snippets/"},{"title":"Daily notes","url":"/features/daily-notes/"},{"title":"Foam logging in VsCode","url":"/features/foam-logging-in-vscode/"},{"title":"Git Integration","url":"/features/git-integration/"},{"title":"Graph Visualisation","url":"/features/graph-visualisation/"},{"title":"Key Bindings","url":"/features/key-bindings/"},{"title":"Link Reference Definitions","url":"/features/link-reference-definitions/"},{"title":"Note Templates","url":"/features/note-templates/"},{"title":"Orphans","url":"/features/orphans/"},{"title":"Tags","url":"/features/tags/"},{"title":"Janitor","url":"/features/workspace-janitor/"}]},{"title":"Foam","type":"tag","url":"/tags/foam/","items":[{"title":"Foam","url":"/"}]},{"title":"Format","type":"tag","url":"/tags/format/","items":[{"title":"Foam File Format","url":"/dev/foam-file-format/"}]},{"title":"Gatsby","type":"tag","url":"/tags/gatsby/","items":[{"title":"Generate a site using Gatsby","url":"/publishing/generate-gatsby-site/"}]},{"title":"Git","type":"tag","url":"/tags/git/","items":[{"title":"Git Integration","url":"/features/git-integration/"}]},{"title":"Github","type":"tag","url":"/tags/github/","items":[{"title":"GitHub Pages","url":"/publishing/publish-to-github-pages/"}]},{"title":"Graph-Visualisation","type":"tag","url":"/tags/graph-visualisation/","items":[{"title":"Graph Visualisation","url":"/features/graph-visualisation/"}]},{"title":"Inbox","type":"tag","url":"/tags/inbox/","items":[{"title":"Inbox","url":"/inbox/"}]},{"title":"Link","type":"tag","url":"/tags/link/","items":[{"title":"Link Reference Definitions","url":"/features/link-reference-definitions/"}]},{"title":"Mdx","type":"tag","url":"/tags/mdx/","items":[{"title":"MDX by Default(stub)","url":"/dev/mdx-by-default/"}]},{"title":"Meetings","type":"tag","url":"/tags/meetings/","items":[{"title":"Foam Core 2020-07-11","url":"/meeting-notes/foam-core-2020-07-11/"}]},{"title":"New","type":"tag","url":"/tags/new/","items":[{"title":"Creating New Notes","url":"/features/creating-new-notes/"}]},{"title":"Orphans","type":"tag","url":"/tags/orphans/","items":[{"title":"Orphans","url":"/features/orphans/"}]},{"title":"Principles","type":"tag","url":"/tags/principles/","items":[{"title":"Principles","url":"/principles/"}]},{"title":"Publish","type":"tag","url":"/tags/publish/","items":[{"title":"Generate a site using Gatsby","url":"/publishing/generate-gatsby-site/"},{"title":"Publishing pages","url":"/publishing/"},{"title":"Katex Math Rendering","url":"/publishing/math-support-with-katex/"},{"title":"Math Support","url":"/publishing/math-support-with-mathjax/"},{"title":"Publish to Azure DevOps Wiki","url":"/publishing/publish-to-azure-devops-wiki/"},{"title":"GitHub Pages","url":"/publishing/publish-to-github-pages/"},{"title":"Publish to GitHub","url":"/publishing/publish-to-github/"},{"title":"GitLab Pages","url":"/publishing/publish-to-gitlab-pages/"},{"title":"Publish to Netlify with Eleventy","url":"/publishing/publish-to-netlify-with-eleventy/"},{"title":"Publish to Vercel","url":"/publishing/publish-to-vercel/"}]},{"title":"Recipes","type":"tag","url":"/tags/recipes/","items":[{"title":"Add images to your notes","url":"/recipes/add-images-to-notes/"},{"title":"Automatically Sync with Git","url":"/recipes/automatic-git-syncing/"},{"title":"Automatically Expand URLs to Well-Titled Links","url":"/recipes/automatically-expand-urls-to-well-titled-links/"},{"title":"Capture Notes With Drafts Pro","url":"/recipes/capture-notes-with-drafts-pro/"},{"title":"Capture Notes With Shortcuts and GitHub Actions","url":"/recipes/capture-notes-with-shortcuts-and-github-actions/"},{"title":"Diagrams in Markdown","url":"/recipes/diagrams-in-markdown/"},{"title":"How to Write Recipes","url":"/recipes/how-to-write-recipes/"},{"title":"Make Backlinks More Prominent","url":"/recipes/make-backlinks-more-prominent/"},{"title":"Migrating from Obsidian (stub)","url":"/recipes/migrating-from-obsidian/"},{"title":"Migrating from OneNote","url":"/recipes/migrating-from-onenote/"},{"title":"Migrating from Roam (stub)","url":"/recipes/migrating-from-roam/"},{"title":"Custom Note Macros","url":"/recipes/note-macros/"},{"title":"Pre-defined User Snippets","url":"/recipes/predefined-user-snippets/"},{"title":"Real-time Collaboration","url":"/recipes/real-time-collaboration/"},{"title":"Recipes","url":"/recipes/recipes/"},{"title":"Search for Notes","url":"/recipes/search-for-notes/"},{"title":"Shows Image Preview on Hover","url":"/recipes/shows-image-preview-on-hover/"},{"title":"Take notes on mobile phones","url":"/recipes/take-notes-from-mobile-phone/"},{"title":"Web Clipper","url":"/recipes/web-clipper/"},{"title":"Write your notes in GitHub Gist","url":"/recipes/write-your-notes-in-github-gist/"}]},{"title":"Roadmap","type":"tag","url":"/tags/roadmap/","items":[{"title":"Roadmap","url":"/dev/roadmap/"}]},{"title":"Tags","type":"tag","url":"/tags/tags/","items":[{"title":"Tags","url":"/features/tags/"}]},{"title":"Task","type":"tag","url":"/tags/task/","items":[{"title":"Good First Task","url":"/dev/good-first-task/"}]},{"title":"Template","type":"tag","url":"/tags/template/","items":[{"title":"Note Templates","url":"/features/note-templates/"}]},{"title":"Templates","type":"tag","url":"/tags/templates/","items":[{"title":"Templates v2 Proposal <!-- omit in TOC -->","url":"/proposals/templates-v2/"}]},{"title":"Todo","type":"tag","url":"/tags/todo/","items":[{"title":"Todo","url":"/dev/todo/"}]},{"title":"Vercel","type":"tag","url":"/tags/vercel/","items":[{"title":"Publish to Vercel","url":"/publishing/publish-to-vercel/"}]},{"title":"Vision","type":"tag","url":"/tags/vision/","items":[{"title":"Big Vision","url":"/big-vision/"}]},{"title":"Wikilinks","type":"tag","url":"/tags/wikilinks/","items":[{"title":"Wikilinks","url":"/wikilinks/"}]},{"title":"architecture","type":"tag","url":"/tags/architecture/","items":[{"title":"Architecture","url":"/dev/architecture/"}]},{"title":"good-first-task","type":"tag","url":"/tags/good-first-task/","items":[{"title":"Contribution Guide","url":"/contribution-guide/"}]},{"title":"todo","type":"tag","url":"/tags/todo/","items":[{"title":"Contribution Guide","url":"/contribution-guide/"}]}],"latestPosts":[{"fields":{"slug":"/SUMMARY/","title":"Summary","lastUpdatedAt":"2021-10-14T22:16:45.000Z","lastUpdated":"10/14/2021"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/","title":"Foam","lastUpdatedAt":"2021-09-09T14:55:13.000Z","lastUpdated":"9/9/2021"},"frontmatter":{"draft":false,"tags":["Foam"]}},{"fields":{"slug":"/404/","title":"Page not found!","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/big-vision/","title":"Big Vision","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["Vision"]}},{"fields":{"slug":"/code-of-conduct/","title":"Code of Conduct","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["Conduct"]}},{"fields":{"slug":"/contribution-guide/","title":"Contribution Guide","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["todo","good-first-task","Contribution"]}},{"fields":{"slug":"/frequently-asked-questions/","title":"Frequently Asked Questions","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["FAQ"]}},{"fields":{"slug":"/inbox/","title":"Inbox","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["Inbox"]}},{"fields":{"slug":"/principles/","title":"Principles","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["Principles"]}},{"fields":{"slug":"/reading-list/","title":"Reading list","lastUpdatedAt":"2021-08-31T04:06:30.000Z","lastUpdated":"8/31/2021"},"frontmatter":{"draft":false,"tags":["Awesome"]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}