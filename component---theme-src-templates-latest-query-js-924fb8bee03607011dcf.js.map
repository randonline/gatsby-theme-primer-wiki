{"version":3,"file":"component---theme-src-templates-latest-query-js-924fb8bee03607011dcf.js","mappings":"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","sources":["webpack://example/../theme/src/components/sidebar.js","webpack://example/../theme/src/components/layout.js","webpack://example/../theme/src/components/tag-posts.js","webpack://example/../theme/src/templates/latest-query.js","webpack://example/../theme/src/components/latest-page.js","webpack://example/../theme/src/utils/sidebar-items.js"],"sourcesContent":["import { Box } from \"@primer/components\";\r\nimport React from \"react\";\r\nimport { HEADER_HEIGHT } from \"./header\";\r\nimport NavItems from \"./nav-items\";\r\n\r\nfunction usePersistentScroll(id) {\r\n  const ref = React.useRef();\r\n\r\n  const handleScroll = React.useCallback(\r\n    // Save scroll position in session storage on every scroll change\r\n    (event) => window.sessionStorage.setItem(id, event.target.scrollTop),\r\n    [id]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    // Restore scroll position when component mounts\r\n    const scrollPosition = window.sessionStorage.getItem(id);\r\n    if (scrollPosition && ref.current) {\r\n      ref.current.scrollTop = scrollPosition;\r\n    }\r\n  }, [id]);\r\n\r\n  // Return props to spread onto the scroll container\r\n  return {\r\n    ref,\r\n    onScroll: handleScroll,\r\n  };\r\n}\r\n\r\nfunction Sidebar({ location, sidebarItems }) {\r\n  const scrollContainerProps = usePersistentScroll(\"sidebar\");\r\n\r\n  if (!(Array.isArray(sidebarItems) && sidebarItems.length > 0)) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Box\r\n      display={[\"none\", null, null, \"block\"]}\r\n      position=\"sticky\"\r\n      top={HEADER_HEIGHT}\r\n      height={`calc(100vh - ${HEADER_HEIGHT}px)`}\r\n      minWidth={260}\r\n      maxWidth={360}\r\n      color=\"auto.gray.8\"\r\n      bg=\"auto.gray.0\"\r\n    >\r\n      <Box\r\n        borderStyle=\"solid\"\r\n        borderColor=\"border.primary\"\r\n        {...scrollContainerProps}\r\n        borderWidth={0}\r\n        borderRightWidth={1}\r\n        borderRadius={0}\r\n        height=\"100%\"\r\n        style={{ overflow: \"auto\" }}\r\n      >\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n          <NavItems location={location} items={sidebarItems} />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import { Box } from \"@primer/components\";\r\nimport React from \"react\";\r\nimport Header from \"./header\";\r\nimport Sidebar from \"./sidebar\";\r\nimport \"../styles/global.css\";\r\nimport { getSidebarItems } from \"../utils/sidebar-items\";\r\nimport useThemeConfig from \"../use-theme-config\";\r\n\r\nfunction Layout({ children, location, pageContext }) {\r\n  const sidebarItems = pageContext.sidebarItems;\r\n  const tagsGroups = pageContext.tagsGroups;\r\n  const currentSlug = pageContext.slug;\r\n  const finalSidebarItems = getSidebarItems(sidebarItems, tagsGroups);\r\n  const primerWikiThemeConfig = useThemeConfig();\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      minHeight=\"100vh\"\r\n      bg=\"bg.primary\"\r\n      color=\"text.primary\"\r\n    >\r\n      <Header\r\n        currentSlug={currentSlug}\r\n        location={location}\r\n        sidebarItems={finalSidebarItems}\r\n        tagsGroups={tagsGroups}\r\n      />\r\n      <Box\r\n        display=\"flex\"\r\n        flex=\"1 1 auto\"\r\n        flexDirection=\"row\"\r\n        css={{ zIndex: 0 }}\r\n      >\r\n        <Sidebar location={location} sidebarItems={finalSidebarItems} />\r\n        <Box\r\n          as=\"main\"\r\n          flex=\"1\"\r\n          maxWidth={primerWikiThemeConfig.contentMaxWidth}\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport components from \"./mdx-components\";\r\nimport { Box, Text } from \"@primer/components\";\r\nimport useThemeConfig from \"../use-theme-config\";\r\n\r\nconst TagPosts = ({\r\n  nodes,\r\n  shouldShowInstantView = false,\r\n  forceMobile = false,\r\n}) => {\r\n  const themeConfig = useThemeConfig();\r\n  const posts = nodes;\r\n  const AnchorTag = (props) => (\r\n    <components.a {...props} references={shouldShowInstantView ? posts : []} />\r\n  );\r\n  return (\r\n    <Box>\r\n      <components.ul>\r\n        {posts &&\r\n          posts\r\n            .filter(\r\n              (post) =>\r\n                post.fields.slug !== \"/404/\" &&\r\n                (!post.frontmatter || post.frontmatter.draft !== true)\r\n            )\r\n            .map((post) => {\r\n              return (\r\n                <li key={post.fields.slug}>\r\n                  <AnchorTag href={post.fields.slug}>\r\n                    {post.fields.title}\r\n                  </AnchorTag>\r\n                  {themeConfig.shouldShowLastUpdated &&\r\n                    post.fields.lastUpdated &&\r\n                    !forceMobile && (\r\n                      <Text\r\n                        display={[\"none\", null, null, \"inline-block\"]}\r\n                        color=\"text.placeholder\"\r\n                        fontSize={1}\r\n                      >\r\n                        &nbsp; - {themeConfig.lastUpdatedText}&nbsp;\r\n                        {post.fields.lastUpdated}\r\n                      </Text>\r\n                    )}\r\n                  {themeConfig.shouldShowLastUpdated &&\r\n                    post.fields.lastUpdated && (\r\n                      <Box\r\n                        display={\r\n                          forceMobile ? \"block\" : [\"block\", null, null, \"none\"]\r\n                        }\r\n                        color=\"text.placeholder\"\r\n                        fontSize={1}\r\n                        mb={2}\r\n                        mt={1}\r\n                      >\r\n                        {themeConfig.lastUpdatedText}&nbsp;\r\n                        {post.fields.lastUpdated}\r\n                      </Box>\r\n                    )}\r\n                </li>\r\n              );\r\n            })}\r\n      </components.ul>\r\n    </Box>\r\n  );\r\n};\r\nexport default TagPosts;\r\n","import { graphql } from \"gatsby\";\r\nimport LatestPage from \"../components/latest-page\";\r\n\r\nexport default LatestPage;\r\n\r\nexport const query = graphql`\r\n  query latestQuery {\r\n    site {\r\n      pathPrefix\r\n      siteMetadata {\r\n        siteUrl\r\n      }\r\n    }\r\n    allMdx {\r\n      nodes {\r\n        frontmatter {\r\n          title\r\n          draft\r\n        }\r\n        fields {\r\n          slug\r\n          title\r\n          lastUpdated\r\n          lastUpdatedAt\r\n          gitCreatedAt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Layout from \"./layout\";\r\nimport SEO from \"./seo\";\r\nimport { Box } from \"@primer/components\";\r\nimport urlJoin from \"url-join\";\r\nimport components from \"./mdx-components\";\r\nimport TagPosts from \"./tag-posts\";\r\nconst Latest = ({ data, pageContext, location }) => {\r\n  const pathPrefix = data.site.pathPrefix || \"\";\r\n  const slug = pageContext.slug;\r\n  const fullPath = urlJoin(pathPrefix || \"/\", slug);\r\n  const siteUrl = data.site.siteMetadata.siteUrl;\r\n  const fullUrl = urlJoin(siteUrl, fullPath);\r\n  const posts = data.allMdx.nodes.sort((a, b) => {\r\n    const aDate = new Date(a.fields.lastUpdatedAt || 0).getTime();\r\n    const bDate = new Date(b.fields.lastUpdatedAt || 0).getTime();\r\n    return bDate - aDate;\r\n  });\r\n  let firstPublistedAt = null;\r\n  let dateModified = null;\r\n  if (posts.length > 0) {\r\n    if (posts[posts.length - 1].fields.gitCreatedAt) {\r\n      firstPublistedAt = new Date(posts[posts.length - 1].fields.gitCreatedAt);\r\n    }\r\n    if (posts[0].fields.lastUpdatedAt) {\r\n      dateModified = new Date(posts[0].fields.lastUpdatedAt);\r\n    }\r\n  }\r\n  const title = `Latest Posts`;\r\n  const palinBody = posts.map((post) => post.fields.title).join(\", \");\r\n  const description = `All latest posts, ${palinBody.slice(0, 256)}`;\r\n  const postSeoData = {\r\n    title,\r\n    frontmatterTitle: \"\",\r\n    description,\r\n    rawBody: palinBody,\r\n    excerpt: description,\r\n    datePublished: firstPublistedAt,\r\n    dateModified: dateModified,\r\n    category: \"Latest\",\r\n    imageUrl: null,\r\n    imageAlt: \"\",\r\n    url: fullUrl,\r\n    slug: slug,\r\n    tags: [\"All Posts\"],\r\n  };\r\n  return (\r\n    <Layout pageContext={pageContext} location={location}>\r\n      <SEO post={postSeoData}></SEO>\r\n      <Box py=\"2\" px={[4, 5, 6, 7]}>\r\n        <components.h2>{title}</components.h2>\r\n        <TagPosts\r\n          nodes={data.allMdx.nodes}\r\n          shouldShowInstantView={false}\r\n        ></TagPosts>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Latest;\r\n","export const getSidebarItems = (sidebarItems, tagsGroups) => {\r\n  return sidebarItems.length > 0\r\n    ? sidebarItems\r\n    : tagsGroups.length > 0\r\n    ? [\r\n        {\r\n          title: \"Tags\",\r\n          items: tagsGroups,\r\n        },\r\n      ]\r\n    : [];\r\n};\r\n"],"names":["id","ref","handleScroll","location","sidebarItems","scrollContainerProps","React","event","window","sessionStorage","setItem","target","scrollTop","scrollPosition","getItem","current","onScroll","Array","isArray","length","Box","display","position","top","HEADER_HEIGHT","height","minWidth","maxWidth","color","bg","borderStyle","borderColor","borderWidth","borderRightWidth","borderRadius","style","overflow","flexDirection","items","children","pageContext","tagsGroups","currentSlug","slug","finalSidebarItems","getSidebarItems","primerWikiThemeConfig","useThemeConfig","minHeight","flex","as","contentMaxWidth","zIndex","nodes","shouldShowInstantView","forceMobile","themeConfig","posts","AnchorTag","props","references","filter","post","fields","frontmatter","draft","map","key","href","title","shouldShowLastUpdated","lastUpdated","fontSize","lastUpdatedText","mb","mt","data","pathPrefix","site","fullPath","urlJoin","siteUrl","siteMetadata","fullUrl","allMdx","sort","a","b","aDate","Date","lastUpdatedAt","getTime","firstPublistedAt","dateModified","gitCreatedAt","palinBody","join","description","slice","postSeoData","frontmatterTitle","rawBody","excerpt","datePublished","category","imageUrl","imageAlt","url","tags","py","px"],"sourceRoot":""}